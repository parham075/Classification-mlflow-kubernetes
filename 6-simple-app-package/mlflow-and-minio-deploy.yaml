apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - name: minio
        image: quay.io/minio/minio:latest
        command:
        - /bin/bash
        - -c
        args: 
        - minio server /data --console-address :9090
        env:
        - name: MINIO_ROOT_USER
          value: minioadmin
        - name: MINIO_ROOT_PASSWORD
          value: minioadmin

        ports:
        - containerPort: 9000
        resources:
          limits:
            cpu: "1"
            memory: 10000Mi
          requests:
            cpu: "0.1"
            memory: 8000Mi
        volumeMounts:
        - name: minio-pvc
          mountPath: /data
      volumes:
      - name: minio-pvc
        persistentVolumeClaim:
          claimName: minio-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: minio-service
spec:
  selector:
    app: minio
  ports:
    - protocol: TCP
      port: 9000
      targetPort: 9000
  type: NodePort  

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc

spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
  storageClassName: standard
---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mlflow-pvc
  namespace: test
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 4Gi
  storageClassName: standard

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow-server
  namespace: test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mlflow-server
  template:
    metadata:
      labels:
        app: mlflow-server
      name: mlflow-server-pod
    spec:
      containers:
      - name: mlflow-server
        image: ubuntu/mlflow:2.1.1_1.0-22.04
        command: ["mlflow"]
        args:
            - server
            - '--host=0.0.0.0'
            - '--port=5000'
            - '--serve-artifacts'
            - '--artifacts-destination=s3://mlflow'
            
        ports:
          - name: http
            containerPort: 5000
            protocol: TCP
          
        env:
          - name: MLFLOW_VERSION
            value: 2.6.0
          - name: MLFLOW_S3_ENDPOINT_URL
            value: http://minio-service:9000
          - name: MLFLOW_TRACKING_URI
            value: http://127.0.0.1:5000
          - name: MLFLOW_BUCKET 
            value: mlflow
          - name: MLFLOW_S3_IGNORE_TLS
            value: "true"
          - name: AWS_ACCESS_KEY_ID
            value: minioadmin
          - name: AWS_SECRET_ACCESS_KEY
            value: minioadmin
          - name: MINIO_ROOT_USER
            value: minioadmin
          - name: MINIO_ROOT_PASSWORD
            value: minioadmin
        resources:
          limits:
            cpu: "1"
            memory: 3000Mi
          requests:
            cpu: "500m"
            memory: 1000Mi
        volumeMounts:
          - name: mlflow-pvc
            mountPath: /data
      volumes:
      - name: mlflow-pvc
        persistentVolumeClaim:
          claimName: mlflow-pvc
      

---
apiVersion: v1
kind: Service
metadata:
  name: mlflow-service
  namespace: test
spec:
  selector:
    app: mlflow-server
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
  type: NodePort


